// Code generated by go-swagger; DO NOT EDIT.

package software

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// DeleteSoftwarePackageReader is a Reader for the DeleteSoftwarePackage structure.
type DeleteSoftwarePackageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSoftwarePackageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteSoftwarePackageNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteSoftwarePackageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteSoftwarePackageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewDeleteSoftwarePackageUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSoftwarePackageNoContent creates a DeleteSoftwarePackageNoContent with default headers values
func NewDeleteSoftwarePackageNoContent() *DeleteSoftwarePackageNoContent {
	return &DeleteSoftwarePackageNoContent{}
}

/*DeleteSoftwarePackageNoContent handles this case with default header values.

No Content
*/
type DeleteSoftwarePackageNoContent struct {
}

func (o *DeleteSoftwarePackageNoContent) Error() string {
	return fmt.Sprintf("[DELETE /software/package/{packageId}][%d] deleteSoftwarePackageNoContent ", 204)
}

func (o *DeleteSoftwarePackageNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSoftwarePackageBadRequest creates a DeleteSoftwarePackageBadRequest with default headers values
func NewDeleteSoftwarePackageBadRequest() *DeleteSoftwarePackageBadRequest {
	return &DeleteSoftwarePackageBadRequest{}
}

/*DeleteSoftwarePackageBadRequest handles this case with default header values.

Bad Request
*/
type DeleteSoftwarePackageBadRequest struct {
	Payload *models.Error
}

func (o *DeleteSoftwarePackageBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /software/package/{packageId}][%d] deleteSoftwarePackageBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSoftwarePackageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSoftwarePackageNotFound creates a DeleteSoftwarePackageNotFound with default headers values
func NewDeleteSoftwarePackageNotFound() *DeleteSoftwarePackageNotFound {
	return &DeleteSoftwarePackageNotFound{}
}

/*DeleteSoftwarePackageNotFound handles this case with default header values.

Not Found
*/
type DeleteSoftwarePackageNotFound struct {
}

func (o *DeleteSoftwarePackageNotFound) Error() string {
	return fmt.Sprintf("[DELETE /software/package/{packageId}][%d] deleteSoftwarePackageNotFound ", 404)
}

func (o *DeleteSoftwarePackageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSoftwarePackageUnprocessableEntity creates a DeleteSoftwarePackageUnprocessableEntity with default headers values
func NewDeleteSoftwarePackageUnprocessableEntity() *DeleteSoftwarePackageUnprocessableEntity {
	return &DeleteSoftwarePackageUnprocessableEntity{}
}

/*DeleteSoftwarePackageUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type DeleteSoftwarePackageUnprocessableEntity struct {
}

func (o *DeleteSoftwarePackageUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /software/package/{packageId}][%d] deleteSoftwarePackageUnprocessableEntity ", 422)
}

func (o *DeleteSoftwarePackageUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
