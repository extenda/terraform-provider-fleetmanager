// Code generated by go-swagger; DO NOT EDIT.

package software

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// CreateSoftwarePackageReader is a Reader for the CreateSoftwarePackage structure.
type CreateSoftwarePackageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSoftwarePackageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateSoftwarePackageCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateSoftwarePackageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateSoftwarePackageCreated creates a CreateSoftwarePackageCreated with default headers values
func NewCreateSoftwarePackageCreated() *CreateSoftwarePackageCreated {
	return &CreateSoftwarePackageCreated{}
}

/*CreateSoftwarePackageCreated handles this case with default header values.

Created
*/
type CreateSoftwarePackageCreated struct {
	/*Path to created resource
	 */
	Location string
}

func (o *CreateSoftwarePackageCreated) Error() string {
	return fmt.Sprintf("[POST /software/package][%d] createSoftwarePackageCreated ", 201)
}

func (o *CreateSoftwarePackageCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewCreateSoftwarePackageBadRequest creates a CreateSoftwarePackageBadRequest with default headers values
func NewCreateSoftwarePackageBadRequest() *CreateSoftwarePackageBadRequest {
	return &CreateSoftwarePackageBadRequest{}
}

/*CreateSoftwarePackageBadRequest handles this case with default header values.

Bad Request
*/
type CreateSoftwarePackageBadRequest struct {
	Payload *models.Error
}

func (o *CreateSoftwarePackageBadRequest) Error() string {
	return fmt.Sprintf("[POST /software/package][%d] createSoftwarePackageBadRequest  %+v", 400, o.Payload)
}

func (o *CreateSoftwarePackageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
