// Code generated by go-swagger; DO NOT EDIT.

package inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// NewUpdateInventoryModelParams creates a new UpdateInventoryModelParams object
// with the default values initialized.
func NewUpdateInventoryModelParams() *UpdateInventoryModelParams {
	var ()
	return &UpdateInventoryModelParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateInventoryModelParamsWithTimeout creates a new UpdateInventoryModelParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateInventoryModelParamsWithTimeout(timeout time.Duration) *UpdateInventoryModelParams {
	var ()
	return &UpdateInventoryModelParams{

		timeout: timeout,
	}
}

// NewUpdateInventoryModelParamsWithContext creates a new UpdateInventoryModelParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateInventoryModelParamsWithContext(ctx context.Context) *UpdateInventoryModelParams {
	var ()
	return &UpdateInventoryModelParams{

		Context: ctx,
	}
}

// NewUpdateInventoryModelParamsWithHTTPClient creates a new UpdateInventoryModelParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateInventoryModelParamsWithHTTPClient(client *http.Client) *UpdateInventoryModelParams {
	var ()
	return &UpdateInventoryModelParams{
		HTTPClient: client,
	}
}

/*UpdateInventoryModelParams contains all the parameters to send to the API endpoint
for the update inventory model operation typically these are written to a http.Request
*/
type UpdateInventoryModelParams struct {

	/*Body*/
	Body *models.UpdateInventoryModel
	/*ManufacturerID*/
	ManufacturerID string
	/*ModelID*/
	ModelID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update inventory model params
func (o *UpdateInventoryModelParams) WithTimeout(timeout time.Duration) *UpdateInventoryModelParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update inventory model params
func (o *UpdateInventoryModelParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update inventory model params
func (o *UpdateInventoryModelParams) WithContext(ctx context.Context) *UpdateInventoryModelParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update inventory model params
func (o *UpdateInventoryModelParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update inventory model params
func (o *UpdateInventoryModelParams) WithHTTPClient(client *http.Client) *UpdateInventoryModelParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update inventory model params
func (o *UpdateInventoryModelParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update inventory model params
func (o *UpdateInventoryModelParams) WithBody(body *models.UpdateInventoryModel) *UpdateInventoryModelParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update inventory model params
func (o *UpdateInventoryModelParams) SetBody(body *models.UpdateInventoryModel) {
	o.Body = body
}

// WithManufacturerID adds the manufacturerID to the update inventory model params
func (o *UpdateInventoryModelParams) WithManufacturerID(manufacturerID string) *UpdateInventoryModelParams {
	o.SetManufacturerID(manufacturerID)
	return o
}

// SetManufacturerID adds the manufacturerId to the update inventory model params
func (o *UpdateInventoryModelParams) SetManufacturerID(manufacturerID string) {
	o.ManufacturerID = manufacturerID
}

// WithModelID adds the modelID to the update inventory model params
func (o *UpdateInventoryModelParams) WithModelID(modelID string) *UpdateInventoryModelParams {
	o.SetModelID(modelID)
	return o
}

// SetModelID adds the modelId to the update inventory model params
func (o *UpdateInventoryModelParams) SetModelID(modelID string) {
	o.ModelID = modelID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateInventoryModelParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param manufacturerId
	if err := r.SetPathParam("manufacturerId", o.ManufacturerID); err != nil {
		return err
	}

	// path param modelId
	if err := r.SetPathParam("modelId", o.ModelID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
