// Code generated by go-swagger; DO NOT EDIT.

package driver

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// GetDriverPackageByIDReader is a Reader for the GetDriverPackageByID structure.
type GetDriverPackageByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDriverPackageByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDriverPackageByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetDriverPackageByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetDriverPackageByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDriverPackageByIDOK creates a GetDriverPackageByIDOK with default headers values
func NewGetDriverPackageByIDOK() *GetDriverPackageByIDOK {
	return &GetDriverPackageByIDOK{}
}

/*GetDriverPackageByIDOK handles this case with default header values.

OK
*/
type GetDriverPackageByIDOK struct {
	Payload *models.DriverPackage
}

func (o *GetDriverPackageByIDOK) Error() string {
	return fmt.Sprintf("[GET /driver/package/{packageId}][%d] getDriverPackageByIdOK  %+v", 200, o.Payload)
}

func (o *GetDriverPackageByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DriverPackage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDriverPackageByIDBadRequest creates a GetDriverPackageByIDBadRequest with default headers values
func NewGetDriverPackageByIDBadRequest() *GetDriverPackageByIDBadRequest {
	return &GetDriverPackageByIDBadRequest{}
}

/*GetDriverPackageByIDBadRequest handles this case with default header values.

Bad Request
*/
type GetDriverPackageByIDBadRequest struct {
	Payload *models.Error
}

func (o *GetDriverPackageByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /driver/package/{packageId}][%d] getDriverPackageByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetDriverPackageByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDriverPackageByIDNotFound creates a GetDriverPackageByIDNotFound with default headers values
func NewGetDriverPackageByIDNotFound() *GetDriverPackageByIDNotFound {
	return &GetDriverPackageByIDNotFound{}
}

/*GetDriverPackageByIDNotFound handles this case with default header values.

Not Found
*/
type GetDriverPackageByIDNotFound struct {
}

func (o *GetDriverPackageByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /driver/package/{packageId}][%d] getDriverPackageByIdNotFound ", 404)
}

func (o *GetDriverPackageByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
