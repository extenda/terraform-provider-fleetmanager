// Code generated by go-swagger; DO NOT EDIT.

package driver

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// DeleteDriverVersionReader is a Reader for the DeleteDriverVersion structure.
type DeleteDriverVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDriverVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteDriverVersionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteDriverVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteDriverVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewDeleteDriverVersionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDriverVersionNoContent creates a DeleteDriverVersionNoContent with default headers values
func NewDeleteDriverVersionNoContent() *DeleteDriverVersionNoContent {
	return &DeleteDriverVersionNoContent{}
}

/*DeleteDriverVersionNoContent handles this case with default header values.

No Content
*/
type DeleteDriverVersionNoContent struct {
}

func (o *DeleteDriverVersionNoContent) Error() string {
	return fmt.Sprintf("[DELETE /driver/package/{packageId}/version/{versionId}][%d] deleteDriverVersionNoContent ", 204)
}

func (o *DeleteDriverVersionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDriverVersionBadRequest creates a DeleteDriverVersionBadRequest with default headers values
func NewDeleteDriverVersionBadRequest() *DeleteDriverVersionBadRequest {
	return &DeleteDriverVersionBadRequest{}
}

/*DeleteDriverVersionBadRequest handles this case with default header values.

Bad Request
*/
type DeleteDriverVersionBadRequest struct {
	Payload *models.Error
}

func (o *DeleteDriverVersionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /driver/package/{packageId}/version/{versionId}][%d] deleteDriverVersionBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteDriverVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDriverVersionNotFound creates a DeleteDriverVersionNotFound with default headers values
func NewDeleteDriverVersionNotFound() *DeleteDriverVersionNotFound {
	return &DeleteDriverVersionNotFound{}
}

/*DeleteDriverVersionNotFound handles this case with default header values.

Not Found
*/
type DeleteDriverVersionNotFound struct {
}

func (o *DeleteDriverVersionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /driver/package/{packageId}/version/{versionId}][%d] deleteDriverVersionNotFound ", 404)
}

func (o *DeleteDriverVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDriverVersionUnprocessableEntity creates a DeleteDriverVersionUnprocessableEntity with default headers values
func NewDeleteDriverVersionUnprocessableEntity() *DeleteDriverVersionUnprocessableEntity {
	return &DeleteDriverVersionUnprocessableEntity{}
}

/*DeleteDriverVersionUnprocessableEntity handles this case with default header values.

Unprocessable Entity
*/
type DeleteDriverVersionUnprocessableEntity struct {
}

func (o *DeleteDriverVersionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /driver/package/{packageId}/version/{versionId}][%d] deleteDriverVersionUnprocessableEntity ", 422)
}

func (o *DeleteDriverVersionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
