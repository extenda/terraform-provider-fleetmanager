// Code generated by go-swagger; DO NOT EDIT.

package fleet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSoftwareProfileByIDParams creates a new GetSoftwareProfileByIDParams object
// with the default values initialized.
func NewGetSoftwareProfileByIDParams() *GetSoftwareProfileByIDParams {
	var ()
	return &GetSoftwareProfileByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSoftwareProfileByIDParamsWithTimeout creates a new GetSoftwareProfileByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSoftwareProfileByIDParamsWithTimeout(timeout time.Duration) *GetSoftwareProfileByIDParams {
	var ()
	return &GetSoftwareProfileByIDParams{

		timeout: timeout,
	}
}

// NewGetSoftwareProfileByIDParamsWithContext creates a new GetSoftwareProfileByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSoftwareProfileByIDParamsWithContext(ctx context.Context) *GetSoftwareProfileByIDParams {
	var ()
	return &GetSoftwareProfileByIDParams{

		Context: ctx,
	}
}

// NewGetSoftwareProfileByIDParamsWithHTTPClient creates a new GetSoftwareProfileByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSoftwareProfileByIDParamsWithHTTPClient(client *http.Client) *GetSoftwareProfileByIDParams {
	var ()
	return &GetSoftwareProfileByIDParams{
		HTTPClient: client,
	}
}

/*GetSoftwareProfileByIDParams contains all the parameters to send to the API endpoint
for the get software profile by Id operation typically these are written to a http.Request
*/
type GetSoftwareProfileByIDParams struct {

	/*BrandID*/
	BrandID string
	/*SoftwareProfileID*/
	SoftwareProfileID string
	/*TenantID*/
	TenantID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) WithTimeout(timeout time.Duration) *GetSoftwareProfileByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) WithContext(ctx context.Context) *GetSoftwareProfileByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) WithHTTPClient(client *http.Client) *GetSoftwareProfileByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBrandID adds the brandID to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) WithBrandID(brandID string) *GetSoftwareProfileByIDParams {
	o.SetBrandID(brandID)
	return o
}

// SetBrandID adds the brandId to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) SetBrandID(brandID string) {
	o.BrandID = brandID
}

// WithSoftwareProfileID adds the softwareProfileID to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) WithSoftwareProfileID(softwareProfileID string) *GetSoftwareProfileByIDParams {
	o.SetSoftwareProfileID(softwareProfileID)
	return o
}

// SetSoftwareProfileID adds the softwareProfileId to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) SetSoftwareProfileID(softwareProfileID string) {
	o.SoftwareProfileID = softwareProfileID
}

// WithTenantID adds the tenantID to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) WithTenantID(tenantID string) *GetSoftwareProfileByIDParams {
	o.SetTenantID(tenantID)
	return o
}

// SetTenantID adds the tenantId to the get software profile by Id params
func (o *GetSoftwareProfileByIDParams) SetTenantID(tenantID string) {
	o.TenantID = tenantID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSoftwareProfileByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param brandId
	if err := r.SetPathParam("brandId", o.BrandID); err != nil {
		return err
	}

	// path param softwareProfileId
	if err := r.SetPathParam("softwareProfileId", o.SoftwareProfileID); err != nil {
		return err
	}

	// path param tenantId
	if err := r.SetPathParam("tenantId", o.TenantID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
