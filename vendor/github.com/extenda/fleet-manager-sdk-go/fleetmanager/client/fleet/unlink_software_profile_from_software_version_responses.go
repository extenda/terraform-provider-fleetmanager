// Code generated by go-swagger; DO NOT EDIT.

package fleet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/extenda/fleet-manager-sdk-go/fleetmanager/models"
)

// UnlinkSoftwareProfileFromSoftwareVersionReader is a Reader for the UnlinkSoftwareProfileFromSoftwareVersion structure.
type UnlinkSoftwareProfileFromSoftwareVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnlinkSoftwareProfileFromSoftwareVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUnlinkSoftwareProfileFromSoftwareVersionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewUnlinkSoftwareProfileFromSoftwareVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewUnlinkSoftwareProfileFromSoftwareVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUnlinkSoftwareProfileFromSoftwareVersionNoContent creates a UnlinkSoftwareProfileFromSoftwareVersionNoContent with default headers values
func NewUnlinkSoftwareProfileFromSoftwareVersionNoContent() *UnlinkSoftwareProfileFromSoftwareVersionNoContent {
	return &UnlinkSoftwareProfileFromSoftwareVersionNoContent{}
}

/*UnlinkSoftwareProfileFromSoftwareVersionNoContent handles this case with default header values.

No Content
*/
type UnlinkSoftwareProfileFromSoftwareVersionNoContent struct {
}

func (o *UnlinkSoftwareProfileFromSoftwareVersionNoContent) Error() string {
	return fmt.Sprintf("[DELETE /fleet/tenant/{tenantId}/brand/{brandId}/softwareprofile/{softwareProfileId}/softwareversion][%d] unlinkSoftwareProfileFromSoftwareVersionNoContent ", 204)
}

func (o *UnlinkSoftwareProfileFromSoftwareVersionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkSoftwareProfileFromSoftwareVersionBadRequest creates a UnlinkSoftwareProfileFromSoftwareVersionBadRequest with default headers values
func NewUnlinkSoftwareProfileFromSoftwareVersionBadRequest() *UnlinkSoftwareProfileFromSoftwareVersionBadRequest {
	return &UnlinkSoftwareProfileFromSoftwareVersionBadRequest{}
}

/*UnlinkSoftwareProfileFromSoftwareVersionBadRequest handles this case with default header values.

Bad Request
*/
type UnlinkSoftwareProfileFromSoftwareVersionBadRequest struct {
	Payload *models.Error
}

func (o *UnlinkSoftwareProfileFromSoftwareVersionBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /fleet/tenant/{tenantId}/brand/{brandId}/softwareprofile/{softwareProfileId}/softwareversion][%d] unlinkSoftwareProfileFromSoftwareVersionBadRequest  %+v", 400, o.Payload)
}

func (o *UnlinkSoftwareProfileFromSoftwareVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnlinkSoftwareProfileFromSoftwareVersionNotFound creates a UnlinkSoftwareProfileFromSoftwareVersionNotFound with default headers values
func NewUnlinkSoftwareProfileFromSoftwareVersionNotFound() *UnlinkSoftwareProfileFromSoftwareVersionNotFound {
	return &UnlinkSoftwareProfileFromSoftwareVersionNotFound{}
}

/*UnlinkSoftwareProfileFromSoftwareVersionNotFound handles this case with default header values.

Not Found
*/
type UnlinkSoftwareProfileFromSoftwareVersionNotFound struct {
}

func (o *UnlinkSoftwareProfileFromSoftwareVersionNotFound) Error() string {
	return fmt.Sprintf("[DELETE /fleet/tenant/{tenantId}/brand/{brandId}/softwareprofile/{softwareProfileId}/softwareversion][%d] unlinkSoftwareProfileFromSoftwareVersionNotFound ", 404)
}

func (o *UnlinkSoftwareProfileFromSoftwareVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
