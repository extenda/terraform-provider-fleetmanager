// Code generated by go-swagger; DO NOT EDIT.

package fleet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "fleet-manager-sdk-go/fleetmanager/models"
)

// GetCountryByIDReader is a Reader for the GetCountryByID structure.
type GetCountryByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCountryByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCountryByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetCountryByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCountryByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCountryByIDOK creates a GetCountryByIDOK with default headers values
func NewGetCountryByIDOK() *GetCountryByIDOK {
	return &GetCountryByIDOK{}
}

/*GetCountryByIDOK handles this case with default header values.

OK
*/
type GetCountryByIDOK struct {
	Payload *models.FleetCountry
}

func (o *GetCountryByIDOK) Error() string {
	return fmt.Sprintf("[GET /fleet/tenant/{tenantId}/brand/{brandId}/country/{countryId}][%d] getCountryByIdOK  %+v", 200, o.Payload)
}

func (o *GetCountryByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FleetCountry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCountryByIDBadRequest creates a GetCountryByIDBadRequest with default headers values
func NewGetCountryByIDBadRequest() *GetCountryByIDBadRequest {
	return &GetCountryByIDBadRequest{}
}

/*GetCountryByIDBadRequest handles this case with default header values.

Bad Request
*/
type GetCountryByIDBadRequest struct {
	Payload *models.Error
}

func (o *GetCountryByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /fleet/tenant/{tenantId}/brand/{brandId}/country/{countryId}][%d] getCountryByIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetCountryByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCountryByIDNotFound creates a GetCountryByIDNotFound with default headers values
func NewGetCountryByIDNotFound() *GetCountryByIDNotFound {
	return &GetCountryByIDNotFound{}
}

/*GetCountryByIDNotFound handles this case with default header values.

Not Found
*/
type GetCountryByIDNotFound struct {
}

func (o *GetCountryByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /fleet/tenant/{tenantId}/brand/{brandId}/country/{countryId}][%d] getCountryByIdNotFound ", 404)
}

func (o *GetCountryByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
